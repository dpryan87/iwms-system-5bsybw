# Kubernetes Deployment manifest for IWMS Frontend Application
# API Version: apps/v1 (Kubernetes v1.24+)
# Purpose: Manages the deployment of the React-based frontend containers with HA, security, and monitoring
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iwms-frontend
  namespace: iwms
  labels:
    app: iwms
    component: frontend
    environment: ${ENV}
    version: ${VERSION}
    managed-by: kubernetes
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/change-cause: "Initial deployment"
spec:
  # Configure high availability with minimum 2 replicas
  replicas: 2
  # Zero-downtime updates using RollingUpdate strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # Pod selector for deployment management
  selector:
    matchLabels:
      app: iwms
      component: frontend
  template:
    metadata:
      labels:
        app: iwms
        component: frontend
        version: ${VERSION}
      annotations:
        # Prometheus monitoring configuration
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/metrics"
        # Configuration checksum for updates
        checksum/config: ${CONFIG_CHECKSUM}
    spec:
      containers:
      - name: frontend
        image: iwms/frontend:${VERSION}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        # Resource allocation as per requirements (2 vCPU, 4GB RAM)
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2"
            memory: "4Gi"
        # Load configuration from ConfigMap
        envFrom:
        - configMapRef:
            name: iwms-frontend-config
        # Health checking configuration
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 30
      # Security context configuration
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      # High availability pod anti-affinity configuration
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: iwms
                  component: frontend
              topologyKey: kubernetes.io/hostname
      # Grace period for pod termination
      terminationGracePeriodSeconds: 30