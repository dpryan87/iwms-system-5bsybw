# Kubernetes Secrets configuration for IWMS application
# API Version: v1
# Purpose: Secure storage of sensitive configuration data and credentials
# Security: AES-256 encryption at rest, RBAC controls, namespace isolation
apiVersion: v1
kind: Secret
metadata:
  name: iwms-secrets
  namespace: iwms
  labels:
    app: iwms
    environment: ${ENV}
    managed-by: terraform
    security-tier: high
    rotation-schedule: 30-days
  annotations:
    secret.kubernetes.io/managed-by: terraform
    secret.kubernetes.io/last-rotated: ${ROTATION_TIMESTAMP}
    vault.hashicorp.com/agent-inject: "true"
    vault.hashicorp.com/role: "iwms-secrets"
    vault.hashicorp.com/secret-volume-path: "/vault/secrets"
    security.alpha.kubernetes.io/secret-automount-service-account-token: "true"
    security.alpha.kubernetes.io/secret-automount-token-expiration: "3600"
type: Opaque
stringData:  # Values will be automatically base64 encoded by Kubernetes
  # Database Credentials
  DB_USERNAME: ${DB_USERNAME}  # Min 8 chars
  DB_PASSWORD: ${DB_PASSWORD}  # Min 16 chars, complex

  # Cache Layer Credentials
  REDIS_PASSWORD: ${REDIS_PASSWORD}  # Min 16 chars, complex

  # Security Keys
  JWT_SECRET: ${JWT_SECRET}  # Min 32 chars, random
  ENCRYPTION_KEY: ${ENCRYPTION_KEY}  # 32 bytes AES-256 key

  # Integration Credentials
  SSO_CLIENT_SECRET: ${SSO_CLIENT_SECRET}
  API_KEY: ${API_KEY}  # Min 32 chars, random

  # External System API Keys
  BMS_API_KEY: ${BMS_API_KEY}  # Building Management System
  FINANCIAL_API_KEY: ${FINANCIAL_API_KEY}  # Financial System
  HR_API_KEY: ${HR_API_KEY}  # HR System

---
# RBAC Role for accessing secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: iwms-secrets-reader
  namespace: iwms
rules:
- apiGroups: [""]
  resources: ["secrets"]
  resourceNames: ["iwms-secrets"]
  verbs: ["get"]

---
# RBAC RoleBinding for service accounts
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: iwms-secrets-reader-binding
  namespace: iwms
subjects:
- kind: ServiceAccount
  name: iwms-backend
  namespace: iwms
roleRef:
  kind: Role
  name: iwms-secrets-reader
  apiGroup: rbac.authorization.k8s.io

---
# Network Policy to restrict secret access
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: iwms-secrets-policy
  namespace: iwms
spec:
  podSelector:
    matchLabels:
      app: iwms
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: iwms
    ports:
    - protocol: TCP
      port: 443