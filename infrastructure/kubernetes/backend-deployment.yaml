---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iwms-backend
  namespace: iwms
  labels:
    app: iwms
    tier: backend
    version: v1
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    fluentd.io/parser: "json"
    vault.hashicorp.com/agent-inject: "true"
    checksum/config: "${CONFIG_CHECKSUM}"
    deployment.kubernetes.io/revision: "1"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: iwms
      tier: backend
  template:
    metadata:
      labels:
        app: iwms
        tier: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
    spec:
      # Topology spread for high availability
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: iwms
              tier: backend
      
      # Pod anti-affinity for resilience
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - iwms
              topologyKey: kubernetes.io/hostname
      
      # Service account for pod identity
      serviceAccountName: iwms-backend
      
      # Init container for dependency checks
      initContainers:
        - name: init-deps
          image: busybox:1.28
          command:
            - sh
            - -c
            - |
              until nslookup redis-master && nslookup postgresql-primary; do
                echo "Waiting for dependencies..."
                sleep 2
              done
      
      # Main container configuration
      containers:
        - name: backend
          image: iwms/backend:latest  # Referenced from backend.dockerfile
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          
          # Resource limits and requests
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          
          # Environment configuration
          envFrom:
            - configMapRef:
                name: iwms-backend-config
            - secretRef:
                name: iwms-backend-secrets
          
          # Health probes
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
          
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 30
            periodSeconds: 10
          
          # Security context for container
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            capabilities:
              drop:
                - ALL
          
          # Volume mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: node-modules
              mountPath: /app/node_modules
            - name: config
              mountPath: /app/config
              readOnly: true
      
      # Pod security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      
      # Volumes configuration
      volumes:
        - name: tmp
          emptyDir: {}
        - name: node-modules
          emptyDir: {}
        - name: config
          configMap:
            name: iwms-backend-config
      
      # Pod termination grace period
      terminationGracePeriodSeconds: 60
      
      # Image pull secrets if using private registry
      imagePullSecrets:
        - name: docker-registry-secret

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: iwms-backend-hpa
  namespace: iwms
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: iwms-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 180

---
# Pod Disruption Budget for availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: iwms-backend-pdb
  namespace: iwms
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: iwms
      tier: backend